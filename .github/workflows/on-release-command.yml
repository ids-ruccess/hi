# .github/workflows/on-release-command.yml
name: "🚀 Release on Slash-Command"

on:
  issue_comment:
    types: [created]

jobs:
  create-release:
    # PR에 단 댓글이면서, 대상 PR의 base 브랜치가 main일 때만 실행되도록 필터링
    if: >
      github.event.issue.pull_request &&
      github.event.issue.pull_request.base.ref == 'main' &&
      startsWith(github.event.comment.body, '/release ')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Extract Version
        run: |
          # 코멘트 본문에서 "/release " 접두어 제거
          COMMENT="${{ github.event.comment.body }}"
          VERSION="${COMMENT#/release }"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Create Tag & Push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git tag "v${VERSION}"
          git push origin "v${VERSION}"

      - name: Draft Release Notes
        id: drafter
        uses: release-drafter/release-drafter@v5
        with:
          config-name: .github/release-drafter.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish Release
        uses: actions/create-release@v1
        with:
          tag_name: "v${{ env.VERSION }}"
          release_name: "v${{ env.VERSION }}"
          draft: false
          body: ${{ steps.drafter.outputs.notes }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
